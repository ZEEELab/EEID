{"ast":null,"code":"var _jsxFileName = \"/Users/zamanlh/github/MMM_Worksheets/networksir/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Viva from 'vivagraphjs';\nimport { useEffect, useRef } from 'react';\nimport { EventQueue } from './event_queue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar graphGenerator = Viva.Graph.generator();\nvar graph = graphGenerator.wattsStrogatz(100, 8, 0.1);\nvar eventQ = new EventQueue();\nvar curTime = 0;\ngraph.forEachNode(node => {\n  node.data = {\n    state: \"susceptible\"\n  };\n});\nfunction App() {\n  _s();\n  const graph_div = useRef(null);\n  useEffect(() => {\n    let viva_layout = Viva.Graph.Layout.forceDirected(graph, {\n      springLength: 10,\n      springCoeff: 0.0001,\n      dragCoeff: 0.1,\n      gravity: -1.2\n    });\n    let viva_graphics = Viva.Graph.View.svgGraphics();\n    let viva_renderer = Viva.Graph.View.renderer(graph, {\n      container: graph_div.current,\n      graphics: viva_graphics,\n      renderLinks: true,\n      layout: viva_layout,\n      interactive: 'scroll node drag'\n    });\n    let highlight_neighborhood = node_graphic => {\n      let node_obj = node_graphic.target.node;\n      viva_graphics.getNodeUI(node_obj.id).attr(\"r\", 10);\n      graph.forEachLinkedNode(node_obj.id, neighbor => {\n        viva_graphics.getNodeUI(neighbor.id).attr(\"r\", 10);\n      });\n    };\n    let unhighlight_neighborhood = node_graphic => {\n      let node_obj = node_graphic.target.node;\n      viva_graphics.getNodeUI(node_obj.id).attr(\"r\", 5);\n      graph.forEachLinkedNode(node_obj.id, neighbor => {\n        viva_graphics.getNodeUI(neighbor.id).attr(\"r\", 5);\n      });\n    };\n    let spreadInfection = node_graphic => {\n      let node_obj = node_graphic.target.node;\n      viva_graphics.getNodeUI(node_obj.id).attr(\"fill\", \"orange\");\n\n      //TODO: keep track of states...\n      node_obj.data[\"state\"] = \"infected\";\n      eventQ.add_event(curTime, {\n        time: curTime + 1,\n        stale: false,\n        recurring: false,\n        callback: () => {\n          console.log(\"here!\");\n          node_obj.data[\"state\"] = \"recovered\";\n          viva_graphics.getNodeUI(node_obj.id).attr(\"fill\", \"black\");\n        }\n      });\n\n      //calculte time to recover...\n      //  how many neighbors should I infect in the time it takes to recover?\n      //  randomly sample neighbor that will be (attempted) infected\n    };\n\n    viva_graphics.node(node => {\n      var ui = Viva.Graph.svg(\"circle\").attr(\"r\", 5).on(\"click\", t => spreadInfection(t)).on(\"mouseover\", t => highlight_neighborhood(t)).on(\"mouseout\", t => unhighlight_neighborhood(t));\n      return ui;\n    });\n    viva_graphics.placeNode(function (nodeUI, pos) {\n      nodeUI.attr('cx', pos.x).attr('cy', pos.y);\n    });\n    viva_renderer.run();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    console.log(Viva.Graph.Utils.timer(() => {\n      //actually do something here...\n      //calculate when transmissions occur and when recovery occurs, enter them as events\n      curTime += 1;\n      eventQ.run_events_fired(curTime, 1);\n      console.log(curTime);\n      return true;\n    }));\n    return () => {\n      viva_renderer.dispose();\n      eventQ.clear_events();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: graph_div,\n    style: {\n      width: 800,\n      height: 600\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/seu/vspzC2g0pGWQzUbPGPQsZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Viva","useEffect","useRef","EventQueue","jsxDEV","_jsxDEV","graphGenerator","Graph","generator","graph","wattsStrogatz","eventQ","curTime","forEachNode","node","data","state","App","_s","graph_div","viva_layout","Layout","forceDirected","springLength","springCoeff","dragCoeff","gravity","viva_graphics","View","svgGraphics","viva_renderer","renderer","container","current","graphics","renderLinks","layout","interactive","highlight_neighborhood","node_graphic","node_obj","target","getNodeUI","id","attr","forEachLinkedNode","neighbor","unhighlight_neighborhood","spreadInfection","add_event","time","stale","recurring","callback","console","log","ui","svg","on","t","placeNode","nodeUI","pos","x","y","run","zoomOut","Utils","timer","run_events_fired","dispose","clear_events","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/src/App.js"],"sourcesContent":["import './App.css';\nimport Viva from 'vivagraphjs';\nimport {useEffect, useRef} from 'react';\nimport {EventQueue} from './event_queue';\n\nvar graphGenerator = Viva.Graph.generator();\nvar graph = graphGenerator.wattsStrogatz(100, 8, 0.1);\n\nvar eventQ = new EventQueue();\nvar curTime = 0;\n\ngraph.forEachNode( (node) => {\n  node.data = {state: \"susceptible\"}\n})\n\nfunction App() {\n  const graph_div = useRef(null);\n  \n\n  useEffect( ()=> {\n    let viva_layout = Viva.Graph.Layout.forceDirected(graph, {\n      springLength : 10,\n      springCoeff : 0.0001,\n      dragCoeff : 0.1,\n      gravity : -1.2,\n    });\n    \n    let viva_graphics = Viva.Graph.View.svgGraphics();\n\n    let viva_renderer = Viva.Graph.View.renderer(graph, {\n      container: graph_div.current,\n      graphics: viva_graphics,\n      renderLinks: true,\n      layout: viva_layout,\n      interactive: 'scroll node drag'\n    });\n\n\n    let highlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n    \n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 10);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 10);\n      });\n    };\n\n    let unhighlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 5);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 5);\n      });\n    };\n\n    let spreadInfection = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"fill\", \"orange\");\n\n      //TODO: keep track of states...\n      node_obj.data[\"state\"] = \"infected\"\n\n      eventQ.add_event(curTime, {time: curTime + 1, stale:false, recurring:false, callback: () => { \n        console.log(\"here!\");\n        node_obj.data[\"state\"] = \"recovered\";\n        viva_graphics.getNodeUI(node_obj.id)\n          .attr(\"fill\", \"black\");\n      }});\n\n      //calculte time to recover...\n      //  how many neighbors should I infect in the time it takes to recover?\n      //  randomly sample neighbor that will be (attempted) infected\n\n\n    };\n\n    viva_graphics.node((node) => {\n      var ui = Viva.Graph.svg(\"circle\")\n        .attr(\"r\", 5)\n        .on(\"click\", (t) => spreadInfection(t))\n        .on(\"mouseover\", (t) => highlight_neighborhood(t))\n        .on(\"mouseout\", (t) => unhighlight_neighborhood(t));\n      return ui;\n    });\n\n    viva_graphics.placeNode(function(nodeUI, pos) {\n      nodeUI.attr('cx', pos.x).attr('cy', pos.y);\n    });\n  \n    viva_renderer.run();\n\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n\n\n\n    console.log(Viva.Graph.Utils.timer( () => {\n      //actually do something here...\n      //calculate when transmissions occur and when recovery occurs, enter them as events\n      curTime += 1;\n      eventQ.run_events_fired(curTime, 1);\n      console.log(curTime); \n\n      return true;\n    }));\n\n    return () => {\n      viva_renderer.dispose();\n      eventQ.clear_events();\n    };\n\n\n  }, [])\n\n\n\n  return (\n    <svg ref={graph_div} style={{width:800, height:600}} >\n    </svg>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
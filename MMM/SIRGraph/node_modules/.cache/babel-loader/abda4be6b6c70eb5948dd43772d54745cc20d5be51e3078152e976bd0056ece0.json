{"ast":null,"code":"module.exports = degree;\n\n/**\n * Calculates graph nodes degree centrality (in/out or both).\n *\n * @see http://en.wikipedia.org/wiki/Centrality#Degree_centrality\n *\n * @param {ngraph.graph} graph object for which we are calculating centrality.\n * @param {string} [kind=both] What kind of degree centrality needs to be calculated:\n *   'in'    - calculate in-degree centrality\n *   'out'   - calculate out-degree centrality\n *   'inout' - (default) generic degree centrality is calculated\n */\nfunction degree(graph, kind) {\n  var getNodeDegree;\n  var result = Object.create(null);\n  kind = (kind || 'both').toLowerCase();\n  if (kind === 'both' || kind === 'inout') {\n    getNodeDegree = inoutDegreeCalculator;\n  } else if (kind === 'in') {\n    getNodeDegree = inDegreeCalculator;\n  } else if (kind === 'out') {\n    getNodeDegree = outDegreeCalculator;\n  } else {\n    throw new Error('Expected centrality degree kind is: in, out or both');\n  }\n  graph.forEachNode(calculateNodeDegree);\n  return result;\n  function calculateNodeDegree(node) {\n    var links = graph.getLinks(node.id);\n    result[node.id] = getNodeDegree(links, node.id);\n  }\n}\nfunction inDegreeCalculator(links, nodeId) {\n  var total = 0;\n  if (!links) return total;\n  for (var i = 0; i < links.length; i += 1) {\n    total += links[i].toId === nodeId ? 1 : 0;\n  }\n  return total;\n}\nfunction outDegreeCalculator(links, nodeId) {\n  var total = 0;\n  if (!links) return total;\n  for (var i = 0; i < links.length; i += 1) {\n    total += links[i].fromId === nodeId ? 1 : 0;\n  }\n  return total;\n}\nfunction inoutDegreeCalculator(links) {\n  if (!links) return 0;\n  return links.length;\n}","map":{"version":3,"names":["module","exports","degree","graph","kind","getNodeDegree","result","Object","create","toLowerCase","inoutDegreeCalculator","inDegreeCalculator","outDegreeCalculator","Error","forEachNode","calculateNodeDegree","node","links","getLinks","id","nodeId","total","i","length","toId","fromId"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/node_modules/ngraph.centrality/src/degree.js"],"sourcesContent":["module.exports = degree;\n\n/**\n * Calculates graph nodes degree centrality (in/out or both).\n *\n * @see http://en.wikipedia.org/wiki/Centrality#Degree_centrality\n *\n * @param {ngraph.graph} graph object for which we are calculating centrality.\n * @param {string} [kind=both] What kind of degree centrality needs to be calculated:\n *   'in'    - calculate in-degree centrality\n *   'out'   - calculate out-degree centrality\n *   'inout' - (default) generic degree centrality is calculated\n */\nfunction degree(graph, kind) {\n  var getNodeDegree;\n  var result = Object.create(null);\n\n  kind = (kind || 'both').toLowerCase();\n  if (kind === 'both' || kind === 'inout') {\n    getNodeDegree = inoutDegreeCalculator;\n  } else if (kind === 'in') {\n    getNodeDegree = inDegreeCalculator;\n  } else if (kind === 'out') {\n    getNodeDegree = outDegreeCalculator;\n  } else {\n    throw new Error('Expected centrality degree kind is: in, out or both');\n  }\n\n  graph.forEachNode(calculateNodeDegree);\n\n  return result;\n\n  function calculateNodeDegree(node) {\n    var links = graph.getLinks(node.id);\n    result[node.id] = getNodeDegree(links, node.id);\n  }\n}\n\nfunction inDegreeCalculator(links, nodeId) {\n  var total = 0;\n  if (!links) return total;\n\n  for (var i = 0; i < links.length; i += 1) {\n    total += (links[i].toId === nodeId) ? 1 : 0;\n  }\n  return total;\n}\n\nfunction outDegreeCalculator(links, nodeId) {\n  var total = 0;\n  if (!links) return total;\n\n  for (var i = 0; i < links.length; i += 1) {\n    total += (links[i].fromId === nodeId) ? 1 : 0;\n  }\n  return total;\n}\n\nfunction inoutDegreeCalculator(links) {\n  if (!links) return 0;\n\n  return links.length;\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,MAAM;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC3B,IAAIC,aAAa;EACjB,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAEhCJ,IAAI,GAAG,CAACA,IAAI,IAAI,MAAM,EAAEK,WAAW,EAAE;EACrC,IAAIL,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,EAAE;IACvCC,aAAa,GAAGK,qBAAqB;EACvC,CAAC,MAAM,IAAIN,IAAI,KAAK,IAAI,EAAE;IACxBC,aAAa,GAAGM,kBAAkB;EACpC,CAAC,MAAM,IAAIP,IAAI,KAAK,KAAK,EAAE;IACzBC,aAAa,GAAGO,mBAAmB;EACrC,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EACxE;EAEAV,KAAK,CAACW,WAAW,CAACC,mBAAmB,CAAC;EAEtC,OAAOT,MAAM;EAEb,SAASS,mBAAmBA,CAACC,IAAI,EAAE;IACjC,IAAIC,KAAK,GAAGd,KAAK,CAACe,QAAQ,CAACF,IAAI,CAACG,EAAE,CAAC;IACnCb,MAAM,CAACU,IAAI,CAACG,EAAE,CAAC,GAAGd,aAAa,CAACY,KAAK,EAAED,IAAI,CAACG,EAAE,CAAC;EACjD;AACF;AAEA,SAASR,kBAAkBA,CAACM,KAAK,EAAEG,MAAM,EAAE;EACzC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI,CAACJ,KAAK,EAAE,OAAOI,KAAK;EAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACxCD,KAAK,IAAKJ,KAAK,CAACK,CAAC,CAAC,CAACE,IAAI,KAAKJ,MAAM,GAAI,CAAC,GAAG,CAAC;EAC7C;EACA,OAAOC,KAAK;AACd;AAEA,SAAST,mBAAmBA,CAACK,KAAK,EAAEG,MAAM,EAAE;EAC1C,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI,CAACJ,KAAK,EAAE,OAAOI,KAAK;EAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACxCD,KAAK,IAAKJ,KAAK,CAACK,CAAC,CAAC,CAACG,MAAM,KAAKL,MAAM,GAAI,CAAC,GAAG,CAAC;EAC/C;EACA,OAAOC,KAAK;AACd;AAEA,SAASX,qBAAqBA,CAACO,KAAK,EAAE;EACpC,IAAI,CAACA,KAAK,EAAE,OAAO,CAAC;EAEpB,OAAOA,KAAK,CAACM,MAAM;AACrB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
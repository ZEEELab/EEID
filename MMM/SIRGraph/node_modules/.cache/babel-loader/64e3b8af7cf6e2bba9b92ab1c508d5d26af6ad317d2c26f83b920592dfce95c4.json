{"ast":null,"code":"module.exports = load;\nvar createGraph = require('ngraph.graph');\nfunction load(jsonGraph, nodeTransform, linkTransform) {\n  var stored;\n  nodeTransform = nodeTransform || id;\n  linkTransform = linkTransform || id;\n  if (typeof jsonGraph === 'string') {\n    stored = JSON.parse(jsonGraph);\n  } else {\n    stored = jsonGraph;\n  }\n  var graph = createGraph(),\n    i;\n  if (stored.links === undefined || stored.nodes === undefined) {\n    throw new Error('Cannot load graph without links and nodes');\n  }\n  for (i = 0; i < stored.nodes.length; ++i) {\n    var parsedNode = nodeTransform(stored.nodes[i]);\n    if (!parsedNode.hasOwnProperty('id')) {\n      throw new Error('Graph node format is invalid: Node id is missing');\n    }\n    graph.addNode(parsedNode.id, parsedNode.data);\n  }\n  for (i = 0; i < stored.links.length; ++i) {\n    var link = linkTransform(stored.links[i]);\n    if (!link.hasOwnProperty('fromId') || !link.hasOwnProperty('toId')) {\n      throw new Error('Graph link format is invalid. Both fromId and toId are required');\n    }\n    graph.addLink(link.fromId, link.toId, link.data);\n  }\n  return graph;\n}\nfunction id(x) {\n  return x;\n}","map":{"version":3,"names":["module","exports","load","createGraph","require","jsonGraph","nodeTransform","linkTransform","stored","id","JSON","parse","graph","i","links","undefined","nodes","Error","length","parsedNode","hasOwnProperty","addNode","data","link","addLink","fromId","toId","x"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/node_modules/ngraph.fromjson/index.js"],"sourcesContent":["module.exports = load;\n\nvar createGraph = require('ngraph.graph');\n\nfunction load(jsonGraph, nodeTransform, linkTransform) {\n  var stored;\n  nodeTransform = nodeTransform || id;\n  linkTransform = linkTransform || id;\n  if (typeof jsonGraph === 'string') {\n    stored = JSON.parse(jsonGraph);\n  } else {\n    stored = jsonGraph;\n  }\n\n  var graph = createGraph(),\n      i;\n\n  if (stored.links === undefined || stored.nodes === undefined) {\n    throw new Error('Cannot load graph without links and nodes');\n  }\n\n  for (i = 0; i < stored.nodes.length; ++i) {\n    var parsedNode = nodeTransform(stored.nodes[i]);\n    if (!parsedNode.hasOwnProperty('id')) {\n      throw new Error('Graph node format is invalid: Node id is missing');\n    }\n\n    graph.addNode(parsedNode.id, parsedNode.data);\n  }\n\n  for (i = 0; i < stored.links.length; ++i) {\n    var link = linkTransform(stored.links[i]);\n    if (!link.hasOwnProperty('fromId') || !link.hasOwnProperty('toId')) {\n      throw new Error('Graph link format is invalid. Both fromId and toId are required');\n    }\n\n    graph.addLink(link.fromId, link.toId, link.data);\n  }\n\n  return graph;\n}\n\nfunction id(x) { return x; }\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,IAAI;AAErB,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEzC,SAASF,IAAIA,CAACG,SAAS,EAAEC,aAAa,EAAEC,aAAa,EAAE;EACrD,IAAIC,MAAM;EACVF,aAAa,GAAGA,aAAa,IAAIG,EAAE;EACnCF,aAAa,GAAGA,aAAa,IAAIE,EAAE;EACnC,IAAI,OAAOJ,SAAS,KAAK,QAAQ,EAAE;IACjCG,MAAM,GAAGE,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;EAChC,CAAC,MAAM;IACLG,MAAM,GAAGH,SAAS;EACpB;EAEA,IAAIO,KAAK,GAAGT,WAAW,EAAE;IACrBU,CAAC;EAEL,IAAIL,MAAM,CAACM,KAAK,KAAKC,SAAS,IAAIP,MAAM,CAACQ,KAAK,KAAKD,SAAS,EAAE;IAC5D,MAAM,IAAIE,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EAEA,KAAKJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACQ,KAAK,CAACE,MAAM,EAAE,EAAEL,CAAC,EAAE;IACxC,IAAIM,UAAU,GAAGb,aAAa,CAACE,MAAM,CAACQ,KAAK,CAACH,CAAC,CAAC,CAAC;IAC/C,IAAI,CAACM,UAAU,CAACC,cAAc,CAAC,IAAI,CAAC,EAAE;MACpC,MAAM,IAAIH,KAAK,CAAC,kDAAkD,CAAC;IACrE;IAEAL,KAAK,CAACS,OAAO,CAACF,UAAU,CAACV,EAAE,EAAEU,UAAU,CAACG,IAAI,CAAC;EAC/C;EAEA,KAAKT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,KAAK,CAACI,MAAM,EAAE,EAAEL,CAAC,EAAE;IACxC,IAAIU,IAAI,GAAGhB,aAAa,CAACC,MAAM,CAACM,KAAK,CAACD,CAAC,CAAC,CAAC;IACzC,IAAI,CAACU,IAAI,CAACH,cAAc,CAAC,QAAQ,CAAC,IAAI,CAACG,IAAI,CAACH,cAAc,CAAC,MAAM,CAAC,EAAE;MAClE,MAAM,IAAIH,KAAK,CAAC,iEAAiE,CAAC;IACpF;IAEAL,KAAK,CAACY,OAAO,CAACD,IAAI,CAACE,MAAM,EAAEF,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACD,IAAI,CAAC;EAClD;EAEA,OAAOV,KAAK;AACd;AAEA,SAASH,EAAEA,CAACkB,CAAC,EAAE;EAAE,OAAOA,CAAC;AAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import'./App.css';import Viva from'vivagraphjs';import{useEffect,useRef}from'react';import{EventQueue}from'./event_queue';import{jStat}from'jstat';import{jsx as _jsx}from\"react/jsx-runtime\";var graphGenerator=Viva.Graph.generator();var graph=graphGenerator.wattsStrogatz(1000,8,0.1);graph.forEachNode(function(node){node.data={state:\"susceptible\"};});function App(){var graph_div=useRef(null);var viva_timer=useRef(null);useEffect(function(){var curTime=0;var eventQ=new EventQueue();var viva_layout=Viva.Graph.Layout.forceDirected(graph,{springLength:10,springCoeff:0.0001,dragCoeff:0.1,gravity:-1.2});var viva_graphics=Viva.Graph.View.svgGraphics();var viva_renderer=Viva.Graph.View.renderer(graph,{container:graph_div.current,graphics:viva_graphics,renderLinks:true,layout:viva_layout,interactive:'scroll node drag'});var highlight_neighborhood=function highlight_neighborhood(node_graphic){var node_obj=node_graphic.target.node;viva_graphics.getNodeUI(node_obj.id).attr(\"r\",20);graph.forEachLinkedNode(node_obj.id,function(neighbor){viva_graphics.getNodeUI(neighbor.id).attr(\"r\",20);});};var unhighlight_neighborhood=function unhighlight_neighborhood(node_graphic){var node_obj=node_graphic.target.node;viva_graphics.getNodeUI(node_obj.id).attr(\"r\",10);graph.forEachLinkedNode(node_obj.id,function(neighbor){viva_graphics.getNodeUI(neighbor.id).attr(\"r\",10);});};var spreadInfection=function spreadInfection(node_obj){viva_graphics.getNodeUI(node_obj.id).attr(\"fill\",\"orange\");//TODO: keep track of states...\nnode_obj.data[\"state\"]=\"infected\";eventQ.add_event(curTime,{time:300,callback:function callback(){node_obj.data[\"state\"]=\"recovered\";viva_graphics.getNodeUI(node_obj.id).attr(\"fill\",\"green\");}});graph.forEachLinkedNode(node_obj.id,function(neighbor_node){if(neighbor_node.data[\"state\"]==\"susceptible\"&&jStat.uniform.sample(0,1)>0.65){eventQ.add_event(curTime,{time:jStat.uniform.sample(0,300),callback:function callback(){spreadInfection(neighbor_node);}});}});//calculte time to recover...\n//  how many neighbors should I infect in the time it takes to recover?\n//  randomly sample neighbor that will be (attempted) infected\n};viva_graphics.node(function(node){var ui=Viva.Graph.svg(\"circle\").attr(\"r\",10).attr(\"fill\",\"MediumBlue\").on(\"click\",function(t){return spreadInfection(t.target.node);}).on(\"mouseover\",function(t){return highlight_neighborhood(t);}).on(\"mouseout\",function(t){return unhighlight_neighborhood(t);});return ui;});viva_graphics.placeNode(function(nodeUI,pos){nodeUI.attr('cx',pos.x).attr('cy',pos.y);});viva_renderer.run();for(var i=0;i<15;i++){viva_renderer.zoomOut();}viva_timer.current=Viva.Graph.Utils.timer(function(){//actually do something here...\n//calculate when transmissions occur and when recovery occurs, enter them as events\ncurTime+=1;eventQ.run_events_fired(curTime,10);return true;});return function(){viva_renderer.dispose();eventQ.clear_events();viva_timer.current.stop();viva_timer.current=null;};},[]);return/*#__PURE__*/_jsx(\"svg\",{ref:graph_div,style:{width:800,height:600}});}export default App;","map":{"version":3,"names":["Viva","useEffect","useRef","EventQueue","jStat","jsx","_jsx","graphGenerator","Graph","generator","graph","wattsStrogatz","forEachNode","node","data","state","App","graph_div","viva_timer","curTime","eventQ","viva_layout","Layout","forceDirected","springLength","springCoeff","dragCoeff","gravity","viva_graphics","View","svgGraphics","viva_renderer","renderer","container","current","graphics","renderLinks","layout","interactive","highlight_neighborhood","node_graphic","node_obj","target","getNodeUI","id","attr","forEachLinkedNode","neighbor","unhighlight_neighborhood","spreadInfection","add_event","time","callback","neighbor_node","uniform","sample","ui","svg","on","t","placeNode","nodeUI","pos","x","y","run","i","zoomOut","Utils","timer","run_events_fired","dispose","clear_events","stop","ref","style","width","height"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/src/App.js"],"sourcesContent":["import './App.css';\nimport Viva from 'vivagraphjs';\nimport {useEffect, useRef} from 'react';\nimport {EventQueue} from './event_queue';\nimport { jStat } from 'jstat';\n\nvar graphGenerator = Viva.Graph.generator();\nvar graph = graphGenerator.wattsStrogatz(1000, 8, 0.1);\n\n\ngraph.forEachNode( (node) => {\n  node.data = {state: \"susceptible\"}\n})\n\nfunction App() {\n  const graph_div = useRef(null);\n  const viva_timer = useRef(null);\n\n  useEffect( ()=> {\n    var curTime = 0;\n    var eventQ = new EventQueue();\n\n\n    let viva_layout = Viva.Graph.Layout.forceDirected(graph, {\n      springLength : 10,\n      springCoeff : 0.0001,\n      dragCoeff : 0.1,\n      gravity : -1.2,\n    });\n    \n    let viva_graphics = Viva.Graph.View.svgGraphics();\n\n    let viva_renderer = Viva.Graph.View.renderer(graph, {\n      container: graph_div.current,\n      graphics: viva_graphics,\n      renderLinks: true,\n      layout: viva_layout,\n      interactive: 'scroll node drag'\n    });\n\n\n    let highlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n    \n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 20);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 20);\n      });\n    };\n\n    let unhighlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 10);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 10);\n      });\n    };\n\n    let spreadInfection = (node_obj) => {\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"fill\", \"orange\");\n\n      //TODO: keep track of states...\n      node_obj.data[\"state\"] = \"infected\"\n\n      eventQ.add_event(curTime, {time: 300, callback: () => { \n        node_obj.data[\"state\"] = \"recovered\";\n        viva_graphics.getNodeUI(node_obj.id)\n          .attr(\"fill\", \"green\");\n      }});\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor_node) => {\n        if(neighbor_node.data[\"state\"] == \"susceptible\" && jStat.uniform.sample(0,1) > 0.65) {\n          eventQ.add_event(curTime, {time: jStat.uniform.sample(0,300), callback: () => {\n            spreadInfection(neighbor_node);\n          }});\n        }\n      });\n  \n\n      //calculte time to recover...\n      //  how many neighbors should I infect in the time it takes to recover?\n      //  randomly sample neighbor that will be (attempted) infected\n\n    };\n\n    viva_graphics.node((node) => {\n      var ui = Viva.Graph.svg(\"circle\")\n        .attr(\"r\", 10)\n        .attr(\"fill\", \"MediumBlue\")\n        .on(\"click\", (t) => spreadInfection(t.target.node))\n        .on(\"mouseover\", (t) => highlight_neighborhood(t))\n        .on(\"mouseout\", (t) => unhighlight_neighborhood(t));\n\n      return ui;\n    });\n\n    viva_graphics.placeNode(function(nodeUI, pos) {\n      nodeUI.attr('cx', pos.x).attr('cy', pos.y);\n    });\n  \n    viva_renderer.run();\n\n    for (let i=0; i<15; i++) {\n      viva_renderer.zoomOut();\n    }\n\n\n    viva_timer.current = Viva.Graph.Utils.timer( () => {\n      //actually do something here...\n      //calculate when transmissions occur and when recovery occurs, enter them as events\n      curTime += 1;\n      eventQ.run_events_fired(curTime, 10);\n      return true;\n    });\n\n    return () => {\n      viva_renderer.dispose();\n      eventQ.clear_events();\n\n      viva_timer.current.stop();\n      viva_timer.current = null;\n    };\n\n\n  }, [])\n\n\n\n  return (\n    <svg ref={graph_div} style={{width:800, height:600}} >\n    </svg>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
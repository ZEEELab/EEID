{"ast":null,"code":"module.exports = template;\nvar BINDING_EXPR = /{{(.+?)}}/;\nfunction template(domNode) {\n  var allBindings = Object.create(null);\n  extractAllBindings(domNode, allBindings);\n  return {\n    link: function (model) {\n      Object.keys(allBindings).forEach(function (key) {\n        var setter = allBindings[key];\n        setter.forEach(changeModel);\n      });\n      function changeModel(setter) {\n        setter(model);\n      }\n    }\n  };\n}\nfunction extractAllBindings(domNode, allBindings) {\n  var nodeType = domNode.nodeType;\n  var typeSupported = nodeType === 1 || nodeType === 3;\n  if (!typeSupported) return;\n  var i;\n  if (domNode.hasChildNodes()) {\n    var domChildren = domNode.childNodes;\n    for (i = 0; i < domChildren.length; ++i) {\n      extractAllBindings(domChildren[i], allBindings);\n    }\n  }\n  if (nodeType === 3) {\n    // text:\n    bindTextContent(domNode, allBindings);\n  }\n  if (!domNode.attributes) return; // this might be a text. Need to figure out what to do in that case\n\n  var attrs = domNode.attributes;\n  for (i = 0; i < attrs.length; ++i) {\n    bindDomAttribute(attrs[i], domNode, allBindings);\n  }\n}\nfunction bindDomAttribute(domAttribute, element, allBindings) {\n  var value = domAttribute.value;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var attrName = domAttribute.localName;\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n  if (!isSimpleValue) throw new Error('simplesvg currently does not support nested bindings');\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [attributeSetter];\n  } else {\n    propertyBindings.push(attributeSetter);\n  }\n  function attributeSetter(model) {\n    element.setAttributeNS(null, attrName, model[modelPropertyName]);\n  }\n}\nfunction bindTextContent(element, allBindings) {\n  // todo reduce duplication\n  var value = element.nodeValue;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [textSetter];\n  } else {\n    propertyBindings.push(textSetter);\n  }\n  function textSetter(model) {\n    element.nodeValue = model[modelPropertyName];\n  }\n}","map":{"version":3,"names":["module","exports","template","BINDING_EXPR","domNode","allBindings","Object","create","extractAllBindings","link","model","keys","forEach","key","setter","changeModel","nodeType","typeSupported","i","hasChildNodes","domChildren","childNodes","length","bindTextContent","attributes","attrs","bindDomAttribute","domAttribute","element","value","modelNameMatch","match","attrName","localName","modelPropertyName","isSimpleValue","indexOf","Error","propertyBindings","attributeSetter","push","setAttributeNS","nodeValue","textSetter"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/node_modules/simplesvg/lib/compile_template.js"],"sourcesContent":["module.exports = template;\n\nvar BINDING_EXPR = /{{(.+?)}}/;\n\nfunction template(domNode) {\n  var allBindings = Object.create(null);\n  extractAllBindings(domNode, allBindings);\n\n  return {\n    link: function(model) {\n      Object.keys(allBindings).forEach(function(key) {\n        var setter = allBindings[key];\n        setter.forEach(changeModel);\n      });\n\n      function changeModel(setter) {\n        setter(model);\n      }\n    }\n  };\n}\n\nfunction extractAllBindings(domNode, allBindings) {\n  var nodeType = domNode.nodeType;\n  var typeSupported = (nodeType === 1) || (nodeType === 3);\n  if (!typeSupported) return;\n  var i;\n  if (domNode.hasChildNodes()) {\n    var domChildren = domNode.childNodes;\n    for (i = 0; i < domChildren.length; ++i) {\n      extractAllBindings(domChildren[i], allBindings);\n    }\n  }\n\n  if (nodeType === 3) { // text:\n    bindTextContent(domNode, allBindings);\n  }\n\n  if (!domNode.attributes) return; // this might be a text. Need to figure out what to do in that case\n\n  var attrs = domNode.attributes;\n  for (i = 0; i < attrs.length; ++i) {\n    bindDomAttribute(attrs[i], domNode, allBindings);\n  }\n}\n\nfunction bindDomAttribute(domAttribute, element, allBindings) {\n  var value = domAttribute.value;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var attrName = domAttribute.localName;\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\n  if (!isSimpleValue) throw new Error('simplesvg currently does not support nested bindings');\n\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [attributeSetter];\n  } else {\n    propertyBindings.push(attributeSetter);\n  }\n\n  function attributeSetter(model) {\n    element.setAttributeNS(null, attrName, model[modelPropertyName]);\n  }\n}\nfunction bindTextContent(element, allBindings) {\n  // todo reduce duplication\n  var value = element.nodeValue;\n  if (!value) return; // unary attribute?\n\n  var modelNameMatch = value.match(BINDING_EXPR);\n  if (!modelNameMatch) return; // does not look like a binding\n\n  var modelPropertyName = modelNameMatch[1];\n  var isSimpleValue = modelPropertyName.indexOf('.') < 0;\n\n  var propertyBindings = allBindings[modelPropertyName];\n  if (!propertyBindings) {\n    propertyBindings = allBindings[modelPropertyName] = [textSetter];\n  } else {\n    propertyBindings.push(textSetter);\n  }\n\n  function textSetter(model) {\n    element.nodeValue = model[modelPropertyName];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
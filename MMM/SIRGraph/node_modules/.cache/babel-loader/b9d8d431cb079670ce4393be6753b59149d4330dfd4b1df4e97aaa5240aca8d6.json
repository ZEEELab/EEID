{"ast":null,"code":"/**\n * @author Andrei Kashcha (aka anvaka) / https://github.com/anvaka\n */\n\nmodule.exports = domInputManager;\nvar dragndrop = require('./dragndrop.js');\nfunction domInputManager(graph, graphics) {\n  var nodeEvents = {};\n  return {\n    /**\n     * Called by renderer to listen to drag-n-drop events from node. E.g. for SVG\n     * graphics we may listen to DOM events, whereas for WebGL the graphics\n     * should provide custom eventing mechanism.\n     *\n     * @param node - to be monitored.\n     * @param handlers - object with set of three callbacks:\n     *   onStart: function(),\n     *   onDrag: function(e, offset),\n     *   onStop: function()\n     */\n    bindDragNDrop: bindDragNDrop\n  };\n  function bindDragNDrop(node, handlers) {\n    var events;\n    if (handlers) {\n      var nodeUI = graphics.getNodeUI(node.id);\n      events = dragndrop(nodeUI);\n      if (typeof handlers.onStart === 'function') {\n        events.onStart(handlers.onStart);\n      }\n      if (typeof handlers.onDrag === 'function') {\n        events.onDrag(handlers.onDrag);\n      }\n      if (typeof handlers.onStop === 'function') {\n        events.onStop(handlers.onStop);\n      }\n      nodeEvents[node.id] = events;\n    } else if (events = nodeEvents[node.id]) {\n      events.release();\n      delete nodeEvents[node.id];\n    }\n  }\n}","map":{"version":3,"names":["module","exports","domInputManager","dragndrop","require","graph","graphics","nodeEvents","bindDragNDrop","node","handlers","events","nodeUI","getNodeUI","id","onStart","onDrag","onStop","release"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/node_modules/vivagraphjs/src/Input/domInputManager.js"],"sourcesContent":["/**\n * @author Andrei Kashcha (aka anvaka) / https://github.com/anvaka\n */\n\nmodule.exports = domInputManager;\n\nvar dragndrop = require('./dragndrop.js');\n\nfunction domInputManager(graph, graphics) {\n  var nodeEvents = {};\n  return {\n    /**\n     * Called by renderer to listen to drag-n-drop events from node. E.g. for SVG\n     * graphics we may listen to DOM events, whereas for WebGL the graphics\n     * should provide custom eventing mechanism.\n     *\n     * @param node - to be monitored.\n     * @param handlers - object with set of three callbacks:\n     *   onStart: function(),\n     *   onDrag: function(e, offset),\n     *   onStop: function()\n     */\n    bindDragNDrop: bindDragNDrop\n  };\n\n  function bindDragNDrop(node, handlers) {\n    var events;\n    if (handlers) {\n      var nodeUI = graphics.getNodeUI(node.id);\n      events = dragndrop(nodeUI);\n      if (typeof handlers.onStart === 'function') {\n        events.onStart(handlers.onStart);\n      }\n      if (typeof handlers.onDrag === 'function') {\n        events.onDrag(handlers.onDrag);\n      }\n      if (typeof handlers.onStop === 'function') {\n        events.onStop(handlers.onStop);\n      }\n\n      nodeEvents[node.id] = events;\n    } else if ((events = nodeEvents[node.id])) {\n      events.release();\n      delete nodeEvents[node.id];\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAGC,eAAe;AAEhC,IAAIC,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEzC,SAASF,eAAeA,CAACG,KAAK,EAAEC,QAAQ,EAAE;EACxC,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,OAAO;IACL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,aAAa,EAAEA;EACjB,CAAC;EAED,SAASA,aAAaA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACrC,IAAIC,MAAM;IACV,IAAID,QAAQ,EAAE;MACZ,IAAIE,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAACJ,IAAI,CAACK,EAAE,CAAC;MACxCH,MAAM,GAAGR,SAAS,CAACS,MAAM,CAAC;MAC1B,IAAI,OAAOF,QAAQ,CAACK,OAAO,KAAK,UAAU,EAAE;QAC1CJ,MAAM,CAACI,OAAO,CAACL,QAAQ,CAACK,OAAO,CAAC;MAClC;MACA,IAAI,OAAOL,QAAQ,CAACM,MAAM,KAAK,UAAU,EAAE;QACzCL,MAAM,CAACK,MAAM,CAACN,QAAQ,CAACM,MAAM,CAAC;MAChC;MACA,IAAI,OAAON,QAAQ,CAACO,MAAM,KAAK,UAAU,EAAE;QACzCN,MAAM,CAACM,MAAM,CAACP,QAAQ,CAACO,MAAM,CAAC;MAChC;MAEAV,UAAU,CAACE,IAAI,CAACK,EAAE,CAAC,GAAGH,MAAM;IAC9B,CAAC,MAAM,IAAKA,MAAM,GAAGJ,UAAU,CAACE,IAAI,CAACK,EAAE,CAAC,EAAG;MACzCH,MAAM,CAACO,OAAO,EAAE;MAChB,OAAOX,UAAU,CAACE,IAAI,CAACK,EAAE,CAAC;IAC5B;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}
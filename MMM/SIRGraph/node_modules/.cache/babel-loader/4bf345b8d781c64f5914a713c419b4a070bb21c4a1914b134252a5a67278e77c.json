{"ast":null,"code":"var _jsxFileName = \"/Users/zamanlh/github/MMM_Worksheets/networksir/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Viva from 'vivagraphjs';\nimport { useEffect, useRef } from 'react';\nimport { EventQueue } from './event_queue';\nimport { jStat } from 'jstat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar graphGenerator = Viva.Graph.generator();\nvar graph = graphGenerator.wattsStrogatz(100, 8, 0.01);\ngraph.forEachNode(node => {\n  node.data = {\n    state: \"susceptible\"\n  };\n});\nfunction App() {\n  _s();\n  const graph_div = useRef(null);\n  const viva_timer = useRef(null);\n  useEffect(() => {\n    var curTime = 0;\n    var eventQ = new EventQueue();\n    let viva_layout = Viva.Graph.Layout.forceDirected(graph, {\n      springLength: 10,\n      springCoeff: 0.0001,\n      dragCoeff: 0.1,\n      gravity: -1.2\n    });\n    let viva_graphics = Viva.Graph.View.svgGraphics();\n    let viva_renderer = Viva.Graph.View.renderer(graph, {\n      container: graph_div.current,\n      graphics: viva_graphics,\n      renderLinks: true,\n      layout: viva_layout,\n      interactive: 'scroll node drag'\n    });\n    let highlight_neighborhood = node_graphic => {\n      let node_obj = node_graphic.target.node;\n      viva_graphics.getNodeUI(node_obj.id).attr(\"r\", 10);\n      graph.forEachLinkedNode(node_obj.id, neighbor => {\n        viva_graphics.getNodeUI(neighbor.id).attr(\"r\", 10);\n      });\n    };\n    let unhighlight_neighborhood = node_graphic => {\n      let node_obj = node_graphic.target.node;\n      viva_graphics.getNodeUI(node_obj.id).attr(\"r\", 5);\n      graph.forEachLinkedNode(node_obj.id, neighbor => {\n        viva_graphics.getNodeUI(neighbor.id).attr(\"r\", 5);\n      });\n    };\n    let spreadInfection = node_obj => {\n      viva_graphics.getNodeUI(node_obj.id).attr(\"fill\", \"orange\");\n\n      //TODO: keep track of states...\n      node_obj.data[\"state\"] = \"infected\";\n      eventQ.add_event(curTime, {\n        time: 300,\n        callback: () => {\n          node_obj.data[\"state\"] = \"recovered\";\n          viva_graphics.getNodeUI(node_obj.id).attr(\"fill\", \"green\");\n        }\n      });\n      graph.forEachLinkedNode(node_obj.id, neighbor_node => {\n        if (neighbor_node.data[\"state\"] == \"susceptible\" && jStat.uniform.sample(0, 1) > 0.3) {\n          eventQ.add_event(curTime, {\n            time: jStat.uniform.sample(0, 300),\n            callback: () => {\n              spreadInfection(neighbor_node);\n            }\n          });\n        }\n      });\n\n      //calculte time to recover...\n      //  how many neighbors should I infect in the time it takes to recover?\n      //  randomly sample neighbor that will be (attempted) infected\n    };\n\n    viva_graphics.node(node => {\n      var ui = Viva.Graph.svg(\"circle\").attr(\"r\", 5).attr(\"fill\", \"MediumBlue\").on(\"click\", t => spreadInfection(t.target.node)).on(\"mouseover\", t => highlight_neighborhood(t)).on(\"mouseout\", t => unhighlight_neighborhood(t));\n      return ui;\n    });\n    viva_graphics.placeNode(function (nodeUI, pos) {\n      nodeUI.attr('cx', pos.x).attr('cy', pos.y);\n    });\n    viva_renderer.run();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_timer.current = Viva.Graph.Utils.timer(() => {\n      //actually do something here...\n      //calculate when transmissions occur and when recovery occurs, enter them as events\n      curTime += 1;\n      eventQ.run_events_fired(curTime, 10);\n      return true;\n    });\n    console.log(viva_timer.current);\n    return () => {\n      viva_renderer.dispose();\n      eventQ.clear_events();\n      viva_timer.current.stop();\n      viva_timer.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: graph_div,\n    style: {\n      width: 800,\n      height: 600\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1z8ME/q0ZjUwEqBjquZuxJkXTxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Viva","useEffect","useRef","EventQueue","jStat","jsxDEV","_jsxDEV","graphGenerator","Graph","generator","graph","wattsStrogatz","forEachNode","node","data","state","App","_s","graph_div","viva_timer","curTime","eventQ","viva_layout","Layout","forceDirected","springLength","springCoeff","dragCoeff","gravity","viva_graphics","View","svgGraphics","viva_renderer","renderer","container","current","graphics","renderLinks","layout","interactive","highlight_neighborhood","node_graphic","node_obj","target","getNodeUI","id","attr","forEachLinkedNode","neighbor","unhighlight_neighborhood","spreadInfection","add_event","time","callback","neighbor_node","uniform","sample","ui","svg","on","t","placeNode","nodeUI","pos","x","y","run","zoomOut","Utils","timer","run_events_fired","console","log","dispose","clear_events","stop","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zamanlh/github/MMM_Worksheets/networksir/src/App.js"],"sourcesContent":["import './App.css';\nimport Viva from 'vivagraphjs';\nimport {useEffect, useRef} from 'react';\nimport {EventQueue} from './event_queue';\nimport { jStat } from 'jstat';\n\nvar graphGenerator = Viva.Graph.generator();\nvar graph = graphGenerator.wattsStrogatz(100, 8, 0.01);\n\n\ngraph.forEachNode( (node) => {\n  node.data = {state: \"susceptible\"}\n})\n\nfunction App() {\n  const graph_div = useRef(null);\n  const viva_timer = useRef(null);\n\n  useEffect( ()=> {\n    var curTime = 0;\n    var eventQ = new EventQueue();\n\n\n    let viva_layout = Viva.Graph.Layout.forceDirected(graph, {\n      springLength : 10,\n      springCoeff : 0.0001,\n      dragCoeff : 0.1,\n      gravity : -1.2,\n    });\n    \n    let viva_graphics = Viva.Graph.View.svgGraphics();\n\n    let viva_renderer = Viva.Graph.View.renderer(graph, {\n      container: graph_div.current,\n      graphics: viva_graphics,\n      renderLinks: true,\n      layout: viva_layout,\n      interactive: 'scroll node drag'\n    });\n\n\n    let highlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n    \n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 10);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 10);\n      });\n    };\n\n    let unhighlight_neighborhood = (node_graphic) => {\n      let node_obj = node_graphic.target.node;\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"r\", 5);\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor)=> {\n        viva_graphics.getNodeUI(neighbor.id)\n          .attr(\"r\", 5);\n      });\n    };\n\n    let spreadInfection = (node_obj) => {\n\n      viva_graphics.getNodeUI(node_obj.id)\n        .attr(\"fill\", \"orange\");\n\n      //TODO: keep track of states...\n      node_obj.data[\"state\"] = \"infected\"\n\n      eventQ.add_event(curTime, {time: 300, callback: () => { \n        node_obj.data[\"state\"] = \"recovered\";\n        viva_graphics.getNodeUI(node_obj.id)\n          .attr(\"fill\", \"green\");\n      }});\n\n      graph.forEachLinkedNode(node_obj.id, (neighbor_node) => {\n        if(neighbor_node.data[\"state\"] == \"susceptible\" && jStat.uniform.sample(0,1) > 0.3) {\n          eventQ.add_event(curTime, {time: jStat.uniform.sample(0,300), callback: () => {\n            spreadInfection(neighbor_node);\n          }});\n        }\n      });\n  \n\n      //calculte time to recover...\n      //  how many neighbors should I infect in the time it takes to recover?\n      //  randomly sample neighbor that will be (attempted) infected\n\n    };\n\n    viva_graphics.node((node) => {\n      var ui = Viva.Graph.svg(\"circle\")\n        .attr(\"r\", 5)\n        .attr(\"fill\", \"MediumBlue\")\n        .on(\"click\", (t) => spreadInfection(t.target.node))\n        .on(\"mouseover\", (t) => highlight_neighborhood(t))\n        .on(\"mouseout\", (t) => unhighlight_neighborhood(t));\n\n      return ui;\n    });\n\n    viva_graphics.placeNode(function(nodeUI, pos) {\n      nodeUI.attr('cx', pos.x).attr('cy', pos.y);\n    });\n  \n    viva_renderer.run();\n\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n    viva_renderer.zoomOut();\n\n\n    viva_timer.current = Viva.Graph.Utils.timer( () => {\n      //actually do something here...\n      //calculate when transmissions occur and when recovery occurs, enter them as events\n      curTime += 1;\n      eventQ.run_events_fired(curTime, 10);\n      return true;\n    });\n\n    console.log(viva_timer.current);\n    return () => {\n      viva_renderer.dispose();\n      eventQ.clear_events();\n\n      viva_timer.current.stop();\n      viva_timer.current = null;\n    };\n\n\n  }, [])\n\n\n\n  return (\n    <svg ref={graph_div} style={{width:800, height:600}} >\n    </svg>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,aAAa;AAC9B,SAAQC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACvC,SAAQC,UAAU,QAAO,eAAe;AACxC,SAASC,KAAK,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,IAAIC,cAAc,GAAGP,IAAI,CAACQ,KAAK,CAACC,SAAS,EAAE;AAC3C,IAAIC,KAAK,GAAGH,cAAc,CAACI,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;AAGtDD,KAAK,CAACE,WAAW,CAAGC,IAAI,IAAK;EAC3BA,IAAI,CAACC,IAAI,GAAG;IAACC,KAAK,EAAE;EAAa,CAAC;AACpC,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMiB,UAAU,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAE,MAAK;IACd,IAAImB,OAAO,GAAG,CAAC;IACf,IAAIC,MAAM,GAAG,IAAIlB,UAAU,EAAE;IAG7B,IAAImB,WAAW,GAAGtB,IAAI,CAACQ,KAAK,CAACe,MAAM,CAACC,aAAa,CAACd,KAAK,EAAE;MACvDe,YAAY,EAAG,EAAE;MACjBC,WAAW,EAAG,MAAM;MACpBC,SAAS,EAAG,GAAG;MACfC,OAAO,EAAG,CAAC;IACb,CAAC,CAAC;IAEF,IAAIC,aAAa,GAAG7B,IAAI,CAACQ,KAAK,CAACsB,IAAI,CAACC,WAAW,EAAE;IAEjD,IAAIC,aAAa,GAAGhC,IAAI,CAACQ,KAAK,CAACsB,IAAI,CAACG,QAAQ,CAACvB,KAAK,EAAE;MAClDwB,SAAS,EAAEhB,SAAS,CAACiB,OAAO;MAC5BC,QAAQ,EAAEP,aAAa;MACvBQ,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAEhB,WAAW;MACnBiB,WAAW,EAAE;IACf,CAAC,CAAC;IAGF,IAAIC,sBAAsB,GAAIC,YAAY,IAAK;MAC7C,IAAIC,QAAQ,GAAGD,YAAY,CAACE,MAAM,CAAC9B,IAAI;MAGvCgB,aAAa,CAACe,SAAS,CAACF,QAAQ,CAACG,EAAE,CAAC,CACjCC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;MAEhBpC,KAAK,CAACqC,iBAAiB,CAACL,QAAQ,CAACG,EAAE,EAAGG,QAAQ,IAAI;QAChDnB,aAAa,CAACe,SAAS,CAACI,QAAQ,CAACH,EAAE,CAAC,CACjCC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAED,IAAIG,wBAAwB,GAAIR,YAAY,IAAK;MAC/C,IAAIC,QAAQ,GAAGD,YAAY,CAACE,MAAM,CAAC9B,IAAI;MAEvCgB,aAAa,CAACe,SAAS,CAACF,QAAQ,CAACG,EAAE,CAAC,CACjCC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MAEfpC,KAAK,CAACqC,iBAAiB,CAACL,QAAQ,CAACG,EAAE,EAAGG,QAAQ,IAAI;QAChDnB,aAAa,CAACe,SAAS,CAACI,QAAQ,CAACH,EAAE,CAAC,CACjCC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC;IAED,IAAII,eAAe,GAAIR,QAAQ,IAAK;MAElCb,aAAa,CAACe,SAAS,CAACF,QAAQ,CAACG,EAAE,CAAC,CACjCC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;;MAEzB;MACAJ,QAAQ,CAAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,UAAU;MAEnCO,MAAM,CAAC8B,SAAS,CAAC/B,OAAO,EAAE;QAACgC,IAAI,EAAE,GAAG;QAAEC,QAAQ,EAAEA,CAAA,KAAM;UACpDX,QAAQ,CAAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,WAAW;UACpCe,aAAa,CAACe,SAAS,CAACF,QAAQ,CAACG,EAAE,CAAC,CACjCC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;QAC1B;MAAC,CAAC,CAAC;MAEHpC,KAAK,CAACqC,iBAAiB,CAACL,QAAQ,CAACG,EAAE,EAAGS,aAAa,IAAK;QACtD,IAAGA,aAAa,CAACxC,IAAI,CAAC,OAAO,CAAC,IAAI,aAAa,IAAIV,KAAK,CAACmD,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,EAAE;UAClFnC,MAAM,CAAC8B,SAAS,CAAC/B,OAAO,EAAE;YAACgC,IAAI,EAAEhD,KAAK,CAACmD,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,GAAG,CAAC;YAAEH,QAAQ,EAAEA,CAAA,KAAM;cAC5EH,eAAe,CAACI,aAAa,CAAC;YAChC;UAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC;;MAGF;MACA;MACA;IAEF,CAAC;;IAEDzB,aAAa,CAAChB,IAAI,CAAEA,IAAI,IAAK;MAC3B,IAAI4C,EAAE,GAAGzD,IAAI,CAACQ,KAAK,CAACkD,GAAG,CAAC,QAAQ,CAAC,CAC9BZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAC1Ba,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAKV,eAAe,CAACU,CAAC,CAACjB,MAAM,CAAC9B,IAAI,CAAC,CAAC,CAClD8C,EAAE,CAAC,WAAW,EAAGC,CAAC,IAAKpB,sBAAsB,CAACoB,CAAC,CAAC,CAAC,CACjDD,EAAE,CAAC,UAAU,EAAGC,CAAC,IAAKX,wBAAwB,CAACW,CAAC,CAAC,CAAC;MAErD,OAAOH,EAAE;IACX,CAAC,CAAC;IAEF5B,aAAa,CAACgC,SAAS,CAAC,UAASC,MAAM,EAAEC,GAAG,EAAE;MAC5CD,MAAM,CAAChB,IAAI,CAAC,IAAI,EAAEiB,GAAG,CAACC,CAAC,CAAC,CAAClB,IAAI,CAAC,IAAI,EAAEiB,GAAG,CAACE,CAAC,CAAC;IAC5C,CAAC,CAAC;IAEFjC,aAAa,CAACkC,GAAG,EAAE;IAEnBlC,aAAa,CAACmC,OAAO,EAAE;IACvBnC,aAAa,CAACmC,OAAO,EAAE;IACvBnC,aAAa,CAACmC,OAAO,EAAE;IACvBnC,aAAa,CAACmC,OAAO,EAAE;IAGvBhD,UAAU,CAACgB,OAAO,GAAGnC,IAAI,CAACQ,KAAK,CAAC4D,KAAK,CAACC,KAAK,CAAE,MAAM;MACjD;MACA;MACAjD,OAAO,IAAI,CAAC;MACZC,MAAM,CAACiD,gBAAgB,CAAClD,OAAO,EAAE,EAAE,CAAC;MACpC,OAAO,IAAI;IACb,CAAC,CAAC;IAEFmD,OAAO,CAACC,GAAG,CAACrD,UAAU,CAACgB,OAAO,CAAC;IAC/B,OAAO,MAAM;MACXH,aAAa,CAACyC,OAAO,EAAE;MACvBpD,MAAM,CAACqD,YAAY,EAAE;MAErBvD,UAAU,CAACgB,OAAO,CAACwC,IAAI,EAAE;MACzBxD,UAAU,CAACgB,OAAO,GAAG,IAAI;IAC3B,CAAC;EAGH,CAAC,EAAE,EAAE,CAAC;EAIN,oBACE7B,OAAA;IAAKsE,GAAG,EAAE1D,SAAU;IAAC2D,KAAK,EAAE;MAACC,KAAK,EAAC,GAAG;MAAEC,MAAM,EAAC;IAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9C;AAEV;AAAClE,EAAA,CAlIQD,GAAG;AAAAoE,EAAA,GAAHpE,GAAG;AAoIZ,eAAeA,GAAG;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}